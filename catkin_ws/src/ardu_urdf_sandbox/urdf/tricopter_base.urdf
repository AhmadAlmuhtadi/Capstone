<?xml version="1.0" ?>
<!-- =================================================================================== -->
<!-- |    This document was autogenerated by xacro from tricopter_base.xacro           | -->
<!-- |    EDITING THIS FILE BY HAND IS NOT RECOMMENDED                                 | -->
<!-- =================================================================================== -->
<!--
  Copyright 2015 Fadri Furrer, ASL, ETH Zurich, Switzerland
  Copyright 2015 Michael Burri, ASL, ETH Zurich, Switzerland
  Copyright 2015 Mina Kamel, ASL, ETH Zurich, Switzerland
  Copyright 2015 Janosch Nikolic, ASL, ETH Zurich, Switzerland
  Copyright 2015 Markus Achtelik, ASL, ETH Zurich, Switzerland

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

  http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<robot name="tricopter">
  <!-- N/A -->
  <link name="tricopter/base_link"/>
  <joint name="tricopter/base_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0 0 0"/>
    <parent link="tricopter/base_link"/>
    <child link="tricopter/base_link_inertia"/>
  </joint>
  <link name="tricopter/base_link_inertia">
    <inertial>
      <mass value="2.0"/>
      <!-- [kg] -->
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="0.012" ixy="0.0" ixz="0.0" iyy="0.015" iyz="0.0" izz="0.027"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://ardu_urdf_sandbox/meshes/trihexa.stl" scale="1 1 1"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.55 0.55 0.6"/>
      </geometry>
    </collision>
  </link>
  <gazebo reference="tricopter/base_link">
    <collision name="tricopter/base_link_collision">
      <surface>
        <contact>
          <ode>
            <max_vel>100.0</max_vel>
            <min_depth>0.001</min_depth>
          </ode>
        </contact>
        <friction>
          <ode>
            <mu>100000.0</mu>
            <mu2>100000.0</mu2>
          </ode>
        </friction>
      </surface>
    </collision>
  </gazebo>
  <gazebo reference="tricopter/base_link">
    <velocity_decay>
      <linear>0.0</linear>
      <angular>0.0</angular>
    </velocity_decay>
  </gazebo>
  <gazebo>
    <joint name="imu_joint" type="revolute">
      <parent>tricopter/base_link</parent>
      <child>imu_link</child>
      <axis>
        <xyz>0 0 1</xyz>
        <limit>
          <lower>0</lower>
          <upper>0</upper>
          <effort>0</effort>
          <velocity>0</velocity>
        </limit>
        <dynamics>
          <damping>1.0</damping>
        </dynamics>
        <use_parent_model_frame>1</use_parent_model_frame>
      </axis>
      <physics>
        <ode>
          <implicit_spring_damper>1</implicit_spring_damper>
        </ode>
      </physics>
    </joint>
    <link name="imu_link">
      <inertial>
        <pose>0 0 0 0 -0 0</pose>
        <mass>0.15</mass>
        <inertia>
          <ixx>0.001</ixx>
          <ixy>0</ixy>
          <ixz>0</ixz>
          <iyy>0.001</iyy>
          <iyz>0</iyz>
          <izz>0.002</izz>
        </inertia>
      </inertial>
      <sensor name="imu_sensor" type="imu">
        <always_on>1</always_on>
        <update_rate>1000</update_rate>
        <pose>0 0 0 -3.14159 -0 0</pose>
      </sensor>
    </link>
    <joint name="tricopter/ground_truth/odometry_sensorgt_joint" type="revolute">
      <parent>tricopter/base_link</parent>
      <child>tricopter/ground_truth/odometry_sensorgt_link</child>
      <axis>
        <xyz>0 0 1</xyz>
        <limit>
          <lower>0</lower>
          <upper>0</upper>
          <effort>0</effort>
          <velocity>0</velocity>
        </limit>
        <dynamics>
          <damping>1.0</damping>
        </dynamics>
        <use_parent_model_frame>1</use_parent_model_frame>
      </axis>
      <physics>
        <ode>
          <implicit_spring_damper>1</implicit_spring_damper>
        </ode>
      </physics>
    </joint>
    <link name="tricopter/ground_truth/odometry_sensorgt_link">
      <inertial>
        <pose>0 0 0 0 -0 0</pose>
        <mass>0.15</mass>
        <inertia>
          <ixx>0.001</ixx>
          <ixy>0</ixy>
          <ixz>0</ixz>
          <iyy>0.001</iyy>
          <iyz>0</iyz>
          <izz>0.001</izz>
        </inertia>
      </inertial>
    </link>
  </gazebo>
  <!--
    <gazebo>
      <plugin filename="librotors_gazebo_multirotor_base_plugin.so" name="multirotor_base_plugin">
        <robotNamespace>${robot_namespace}</robotNamespace>
        <linkName>${robot_namespace}/base_link</linkName>
        <rotorVelocitySlowdownSim>${rotor_velocity_slowdown_sim}</rotorVelocitySlowdownSim>
      </plugin>
    </gazebo>
		-->
  <gazebo>
    <plugin filename="libArduPilotPlugin.so" name="arducopter_plugin">
      <fdm_addr>127.0.0.1</fdm_addr>
      <fdm_port_in>9012</fdm_port_in>
      <fdm_port_out>9013</fdm_port_out>
      <modelXYZToAirplaneXForwardZDown>0 0 0 3.141593 0 0</modelXYZToAirplaneXForwardZDown>
      <gazeboXYZToNED>0 0 0 3.141593 0 0</gazeboXYZToNED>
      <imuName>tricopter::imu_link::imu_sensor</imuName>
      <connectionTimeoutMaxCount>5</connectionTimeoutMaxCount>
      <control channel="0">
        <type>VELOCITY</type>
        <offset>0</offset>
        <p_gain>0.20</p_gain>
        <i_gain>0</i_gain>
        <d_gain>0</d_gain>
        <i_max>0</i_max>
        <i_min>0</i_min>
        <cmd_max>2.5</cmd_max>
        <cmd_min>-2.5</cmd_min>
        <jointName>tricopter::tricopter/rotor_0_joint</jointName>
        <multiplier>600</multiplier>
        <controlVelocitySlowdownSim>10</controlVelocitySlowdownSim>
      </control>
      <control channel="1">
        <type>VELOCITY</type>
        <offset>0</offset>
        <p_gain>0.20</p_gain>
        <i_gain>0</i_gain>
        <d_gain>0</d_gain>
        <i_max>0</i_max>
        <i_min>0</i_min>
        <cmd_max>2.5</cmd_max>
        <cmd_min>-2.5</cmd_min>
        <jointName>tricopter::tricopter/rotor_1_joint</jointName>
        <multiplier>600</multiplier>
        <controlVelocitySlowdownSim>10</controlVelocitySlowdownSim>
      </control>
      <control channel="2">
        <type>VELOCITY</type>
        <offset>0</offset>
        <p_gain>0.20</p_gain>
        <i_gain>0</i_gain>
        <d_gain>0</d_gain>
        <i_max>0</i_max>
        <i_min>0</i_min>
        <cmd_max>2.5</cmd_max>
        <cmd_min>-2.5</cmd_min>
        <jointName>tricopter::tricopter/rotor_2_joint</jointName>
        <multiplier>600</multiplier>
        <controlVelocitySlowdownSim>10</controlVelocitySlowdownSim>
      </control>
      <control channel="3">
        <type>VELOCITY</type>
        <offset>0</offset>
        <p_gain>0.20</p_gain>
        <i_gain>0</i_gain>
        <d_gain>0</d_gain>
        <i_max>0</i_max>
        <i_min>0</i_min>
        <cmd_max>2.5</cmd_max>
        <cmd_min>-2.5</cmd_min>
        <jointName>tricopter::tricopter/rotor_3_joint</jointName>
        <multiplier>-600</multiplier>
        <controlVelocitySlowdownSim>10</controlVelocitySlowdownSim>
      </control>
      <control channel="4">
        <type>VELOCITY</type>
        <offset>0</offset>
        <p_gain>0.20</p_gain>
        <i_gain>0</i_gain>
        <d_gain>0</d_gain>
        <i_max>0</i_max>
        <i_min>0</i_min>
        <cmd_max>2.5</cmd_max>
        <cmd_min>-2.5</cmd_min>
        <jointName>tricopter::tricopter/rotor_4_joint</jointName>
        <multiplier>-600</multiplier>
        <controlVelocitySlowdownSim>10</controlVelocitySlowdownSim>
      </control>
      <control channel="5">
        <type>VELOCITY</type>
        <offset>0</offset>
        <p_gain>0.20</p_gain>
        <i_gain>0</i_gain>
        <d_gain>0</d_gain>
        <i_max>0</i_max>
        <i_min>0</i_min>
        <cmd_max>2.5</cmd_max>
        <cmd_min>-2.5</cmd_min>
        <jointName>tricopter::tricopter/rotor_5_joint</jointName>
        <multiplier>-600</multiplier>
        <controlVelocitySlowdownSim>10</controlVelocitySlowdownSim>
      </control>
    </plugin>
  </gazebo>
  <gazebo>
    <joint name="tricopter/rotor_0_joint" type="revolute">
      <parent>tricopter/base_link</parent>
      <child>tricopter/rotor_0</child>
      <axis>
        <xyz>0 0 1</xyz>
        <limit>
          <lower>-1e+16</lower>
          <upper>1e+16</upper>
        </limit>
        <dynamics>
          <damping>0.004</damping>
        </dynamics>
        <use_parent_model_frame>1</use_parent_model_frame>
      </axis>
      <physics>
        <ode>
          <implicit_spring_damper>1</implicit_spring_damper>
        </ode>
      </physics>
    </joint>
    <link name="tricopter/rotor_0">
      <pose>-0.4 0 0.055 0 -0 0</pose>
      <inertial>
        <pose>0 0 0 0 -0 0</pose>
        <mass>0.04</mass>
        <inertia>
          <ixx>9.75e-06</ixx>
          <ixy>0</ixy>
          <ixz>0</ixz>
          <iyy>0.000166704</iyy>
          <iyz>0</iyz>
          <izz>0.000167604</izz>
        </inertia>
      </inertial>
      <collision name="tricopter/rotor_3_collision">
        <pose>0 0 0 0 -0 0</pose>
        <geometry>
          <cylinder>
            <length>0.005</length>
            <radius>0.175</radius>
          </cylinder>
        </geometry>
        <surface>
          <contact>
            <ode/>
          </contact>
          <friction>
            <ode/>
          </friction>
        </surface>
      </collision>
      <visual name="tricopter/rotor_3_visual">
        <pose>0 0 0 0 -0 0</pose>
        <geometry>
          <mesh>
            <scale>0.175 0.175 0.175</scale>
            <uri>/home/ahmad/catkin_ws/src/ardu_urdf_sandbox/meshes/propeller_ccw.dae</uri>
          </mesh>
        </geometry>
        <material>
          <script>
            <name>Gazebo/Red</name>
            <uri>file://media/materials/scripts/gazebo.material</uri>
          </script>
        </material>
      </visual>
    </link>
    <plugin filename="libLiftDragPlugin.so" name="rotor_0_blade_1">
      <a0>0.3</a0>
      <alpha_stall>1.4</alpha_stall>
      <cla>4.25</cla>
      <cda>0.1</cda>
      <cma>0.00</cma>
      <cla_stall>-0.025</cla_stall>
      <cda_stall>0.0</cda_stall>
      <cma_stall>0.0</cma_stall>
      <area>0.002</area>
      <air_density>1.2041</air_density>
      <cp>0.084 0 0</cp>
      <forward>0 1 0</forward>
      <upward>0 0 1</upward>
      <link_name>tricopter::tricopter/rotor_0</link_name>
    </plugin>
    <plugin filename="libLiftDragPlugin.so" name="rotor_0_blade_2">
      <a0>0.3</a0>
      <alpha_stall>1.4</alpha_stall>
      <cla>4.25</cla>
      <cda>0.1</cda>
      <cma>0.00</cma>
      <cla_stall>-0.025</cla_stall>
      <cda_stall>0.0</cda_stall>
      <cma_stall>0.0</cma_stall>
      <area>0.002</area>
      <air_density>1.2041</air_density>
      <cp>-0.084 0 0</cp>
      <forward>0 -1 0</forward>
      <upward>0 0 1</upward>
      <link_name>tricopter::tricopter/rotor_0</link_name>
    </plugin>
  </gazebo>
  <gazebo>
    <joint name="tricopter/rotor_3_joint" type="revolute">
      <parent>tricopter/base_link</parent>
      <child>tricopter/rotor_3</child>
      <axis>
        <xyz>0 0 1</xyz>
        <limit>
          <lower>-1e+16</lower>
          <upper>1e+16</upper>
        </limit>
        <dynamics>
          <damping>0.004</damping>
        </dynamics>
        <use_parent_model_frame>1</use_parent_model_frame>
      </axis>
      <physics>
        <ode>
          <implicit_spring_damper>1</implicit_spring_damper>
        </ode>
      </physics>
    </joint>
    <link name="tricopter/rotor_3">
      <pose>-0.4 0 -0.049 0 -0 0</pose>
      <inertial>
        <pose>0 0 0 0 -0 0</pose>
        <mass>0.04</mass>
        <inertia>
          <ixx>9.75e-06</ixx>
          <ixy>0</ixy>
          <ixz>0</ixz>
          <iyy>0.000166704</iyy>
          <iyz>0</iyz>
          <izz>0.000167604</izz>
        </inertia>
      </inertial>
      <collision name="tricopter/rotor_3_collision">
        <pose>0 0 0 0 -0 0</pose>
        <geometry>
          <cylinder>
            <length>0.005</length>
            <radius>0.175</radius>
          </cylinder>
        </geometry>
        <surface>
          <contact>
            <ode/>
          </contact>
          <friction>
            <ode/>
          </friction>
        </surface>
      </collision>
      <visual name="tricopter/rotor_3_visual">
        <pose>0 0 0 0 -0 0</pose>
        <geometry>
          <mesh>
            <scale>0.175 0.175 0.175</scale>
            <uri>/home/ahmad/catkin_ws/src/ardu_urdf_sandbox/meshes/propeller_cw.dae</uri>
          </mesh>
        </geometry>
        <material>
          <script>
            <name>Gazebo/Blue</name>
            <uri>file://media/materials/scripts/gazebo.material</uri>
          </script>
        </material>
      </visual>
    </link>
    <plugin filename="libLiftDragPlugin.so" name="rotor_3_blade_1">
      <a0>0.3</a0>
      <alpha_stall>1.4</alpha_stall>
      <cla>4.25</cla>
      <cda>0.1</cda>
      <cma>0.00</cma>
      <cla_stall>-0.025</cla_stall>
      <cda_stall>0.0</cda_stall>
      <cma_stall>0.0</cma_stall>
      <area>0.002</area>
      <air_density>1.2041</air_density>
      <cp>0.084 0 0</cp>
      <forward>0 -1 0</forward>
      <upward>0 0 1</upward>
      <link_name>tricopter::tricopter/rotor_3</link_name>
    </plugin>
    <plugin filename="libLiftDragPlugin.so" name="rotor_3_blade_2">
      <a0>0.3</a0>
      <alpha_stall>1.4</alpha_stall>
      <cla>4.25</cla>
      <cda>0.1</cda>
      <cma>0.00</cma>
      <cla_stall>-0.025</cla_stall>
      <cda_stall>0.0</cda_stall>
      <cma_stall>0.0</cma_stall>
      <area>0.002</area>
      <air_density>1.2041</air_density>
      <cp>-0.084 0 0</cp>
      <forward>0 1 0</forward>
      <upward>0 0 1</upward>
      <link_name>tricopter::tricopter/rotor_3</link_name>
    </plugin>
  </gazebo>
  <gazebo>
    <joint name="tricopter/rotor_1_joint" type="revolute">
      <parent>tricopter/base_link</parent>
      <child>tricopter/rotor_1</child>
      <axis>
        <xyz>0 0 1</xyz>
        <limit>
          <lower>-1e+16</lower>
          <upper>1e+16</upper>
        </limit>
        <dynamics>
          <damping>0.004</damping>
        </dynamics>
        <use_parent_model_frame>1</use_parent_model_frame>
      </axis>
      <physics>
        <ode>
          <implicit_spring_damper>1</implicit_spring_damper>
        </ode>
      </physics>
    </joint>
    <link name="tricopter/rotor_1">
      <pose>0.2 -0.3464101615136 0.055 0 -0 0</pose>
      <inertial>
        <pose>0 0 0 0 -0 0</pose>
        <mass>0.04</mass>
        <inertia>
          <ixx>9.75e-06</ixx>
          <ixy>0</ixy>
          <ixz>0</ixz>
          <iyy>0.000166704</iyy>
          <iyz>0</iyz>
          <izz>0.000167604</izz>
        </inertia>
      </inertial>
      <collision name="tricopter/rotor_3_collision">
        <pose>0 0 0 0 -0 0</pose>
        <geometry>
          <cylinder>
            <length>0.005</length>
            <radius>0.175</radius>
          </cylinder>
        </geometry>
        <surface>
          <contact>
            <ode/>
          </contact>
          <friction>
            <ode/>
          </friction>
        </surface>
      </collision>
      <visual name="tricopter/rotor_3_visual">
        <pose>0 0 0 0 -0 0</pose>
        <geometry>
          <mesh>
            <scale>0.175 0.175 0.175</scale>
            <uri>/home/ahmad/catkin_ws/src/ardu_urdf_sandbox/meshes/propeller_ccw.dae</uri>
          </mesh>
        </geometry>
        <material>
          <script>
            <name>Gazebo/Red</name>
            <uri>file://media/materials/scripts/gazebo.material</uri>
          </script>
        </material>
      </visual>
    </link>
    <plugin filename="libLiftDragPlugin.so" name="rotor_1_blade_1">
      <a0>0.3</a0>
      <alpha_stall>1.4</alpha_stall>
      <cla>4.25</cla>
      <cda>0.1</cda>
      <cma>0.00</cma>
      <cla_stall>-0.025</cla_stall>
      <cda_stall>0.0</cda_stall>
      <cma_stall>0.0</cma_stall>
      <area>0.002</area>
      <air_density>1.2041</air_density>
      <cp>0.084 0 0</cp>
      <forward>0 1 0</forward>
      <upward>0 0 1</upward>
      <link_name>tricopter::tricopter/rotor_1</link_name>
    </plugin>
    <plugin filename="libLiftDragPlugin.so" name="rotor_1_blade_2">
      <a0>0.3</a0>
      <alpha_stall>1.4</alpha_stall>
      <cla>4.25</cla>
      <cda>0.1</cda>
      <cma>0.00</cma>
      <cla_stall>-0.025</cla_stall>
      <cda_stall>0.0</cda_stall>
      <cma_stall>0.0</cma_stall>
      <area>0.002</area>
      <air_density>1.2041</air_density>
      <cp>-0.084 0 0</cp>
      <forward>0 -1 0</forward>
      <upward>0 0 1</upward>
      <link_name>tricopter::tricopter/rotor_1</link_name>
    </plugin>
  </gazebo>
  <gazebo>
    <joint name="tricopter/rotor_4_joint" type="revolute">
      <parent>tricopter/base_link</parent>
      <child>tricopter/rotor_4</child>
      <axis>
        <xyz>0 0 1</xyz>
        <limit>
          <lower>-1e+16</lower>
          <upper>1e+16</upper>
        </limit>
        <dynamics>
          <damping>0.004</damping>
        </dynamics>
        <use_parent_model_frame>1</use_parent_model_frame>
      </axis>
      <physics>
        <ode>
          <implicit_spring_damper>1</implicit_spring_damper>
        </ode>
      </physics>
    </joint>
    <link name="tricopter/rotor_4">
      <pose>0.2 -0.3464101615136 -0.049 0 -0 0</pose>
      <inertial>
        <pose>0 0 0 0 -0 0</pose>
        <mass>0.04</mass>
        <inertia>
          <ixx>9.75e-06</ixx>
          <ixy>0</ixy>
          <ixz>0</ixz>
          <iyy>0.000166704</iyy>
          <iyz>0</iyz>
          <izz>0.000167604</izz>
        </inertia>
      </inertial>
      <collision name="tricopter/rotor_3_collision">
        <pose>0 0 0 0 -0 0</pose>
        <geometry>
          <cylinder>
            <length>0.005</length>
            <radius>0.175</radius>
          </cylinder>
        </geometry>
        <surface>
          <contact>
            <ode/>
          </contact>
          <friction>
            <ode/>
          </friction>
        </surface>
      </collision>
      <visual name="tricopter/rotor_3_visual">
        <pose>0 0 0 0 -0 0</pose>
        <geometry>
          <mesh>
            <scale>0.175 0.175 0.175</scale>
            <uri>/home/ahmad/catkin_ws/src/ardu_urdf_sandbox/meshes/propeller_cw.dae</uri>
          </mesh>
        </geometry>
        <material>
          <script>
            <name>Gazebo/Blue</name>
            <uri>file://media/materials/scripts/gazebo.material</uri>
          </script>
        </material>
      </visual>
    </link>
    <plugin filename="libLiftDragPlugin.so" name="rotor_4_blade_1">
      <a0>0.3</a0>
      <alpha_stall>1.4</alpha_stall>
      <cla>4.25</cla>
      <cda>0.1</cda>
      <cma>0.00</cma>
      <cla_stall>-0.025</cla_stall>
      <cda_stall>0.0</cda_stall>
      <cma_stall>0.0</cma_stall>
      <area>0.002</area>
      <air_density>1.2041</air_density>
      <cp>0.084 0 0</cp>
      <forward>0 -1 0</forward>
      <upward>0 0 1</upward>
      <link_name>tricopter::tricopter/rotor_4</link_name>
    </plugin>
    <plugin filename="libLiftDragPlugin.so" name="rotor_4_blade_2">
      <a0>0.3</a0>
      <alpha_stall>1.4</alpha_stall>
      <cla>4.25</cla>
      <cda>0.1</cda>
      <cma>0.00</cma>
      <cla_stall>-0.025</cla_stall>
      <cda_stall>0.0</cda_stall>
      <cma_stall>0.0</cma_stall>
      <area>0.002</area>
      <air_density>1.2041</air_density>
      <cp>-0.084 0 0</cp>
      <forward>0 1 0</forward>
      <upward>0 0 1</upward>
      <link_name>tricopter::tricopter/rotor_4</link_name>
    </plugin>
  </gazebo>
  <gazebo>
    <joint name="tricopter/rotor_2_joint" type="revolute">
      <parent>tricopter/base_link</parent>
      <child>tricopter/rotor_2</child>
      <axis>
        <xyz>0 0 1</xyz>
        <limit>
          <lower>-1e+16</lower>
          <upper>1e+16</upper>
        </limit>
        <dynamics>
          <damping>0.004</damping>
        </dynamics>
        <use_parent_model_frame>1</use_parent_model_frame>
      </axis>
      <physics>
        <ode>
          <implicit_spring_damper>1</implicit_spring_damper>
        </ode>
      </physics>
    </joint>
    <link name="tricopter/rotor_2">
      <pose>0.2 0.3464101615136 0.055 0 -0 0</pose>
      <inertial>
        <pose>0 0 0 0 -0 0</pose>
        <mass>0.04</mass>
        <inertia>
          <ixx>9.75e-06</ixx>
          <ixy>0</ixy>
          <ixz>0</ixz>
          <iyy>0.000166704</iyy>
          <iyz>0</iyz>
          <izz>0.000167604</izz>
        </inertia>
      </inertial>
      <collision name="tricopter/rotor_3_collision">
        <pose>0 0 0 0 -0 0</pose>
        <geometry>
          <cylinder>
            <length>0.005</length>
            <radius>0.175</radius>
          </cylinder>
        </geometry>
        <surface>
          <contact>
            <ode/>
          </contact>
          <friction>
            <ode/>
          </friction>
        </surface>
      </collision>
      <visual name="tricopter/rotor_3_visual">
        <pose>0 0 0 0 -0 0</pose>
        <geometry>
          <mesh>
            <scale>0.175 0.175 0.175</scale>
            <uri>/home/ahmad/catkin_ws/src/ardu_urdf_sandbox/meshes/propeller_ccw.dae</uri>
          </mesh>
        </geometry>
        <material>
          <script>
            <name>Gazebo/Red</name>
            <uri>file://media/materials/scripts/gazebo.material</uri>
          </script>
        </material>
      </visual>
    </link>
    <plugin filename="libLiftDragPlugin.so" name="rotor_2_blade_1">
      <a0>0.3</a0>
      <alpha_stall>1.4</alpha_stall>
      <cla>4.25</cla>
      <cda>0.1</cda>
      <cma>0.00</cma>
      <cla_stall>-0.025</cla_stall>
      <cda_stall>0.0</cda_stall>
      <cma_stall>0.0</cma_stall>
      <area>0.002</area>
      <air_density>1.2041</air_density>
      <cp>0.084 0 0</cp>
      <forward>0 1 0</forward>
      <upward>0 0 1</upward>
      <link_name>tricopter::tricopter/rotor_2</link_name>
    </plugin>
    <plugin filename="libLiftDragPlugin.so" name="rotor_2_blade_2">
      <a0>0.3</a0>
      <alpha_stall>1.4</alpha_stall>
      <cla>4.25</cla>
      <cda>0.1</cda>
      <cma>0.00</cma>
      <cla_stall>-0.025</cla_stall>
      <cda_stall>0.0</cda_stall>
      <cma_stall>0.0</cma_stall>
      <area>0.002</area>
      <air_density>1.2041</air_density>
      <cp>-0.084 0 0</cp>
      <forward>0 -1 0</forward>
      <upward>0 0 1</upward>
      <link_name>tricopter::tricopter/rotor_2</link_name>
    </plugin>
  </gazebo>
  <gazebo>
    <joint name="tricopter/rotor_5_joint" type="revolute">
      <parent>tricopter/base_link</parent>
      <child>tricopter/rotor_5</child>
      <axis>
        <xyz>0 0 1</xyz>
        <limit>
          <lower>-1e+16</lower>
          <upper>1e+16</upper>
        </limit>
        <dynamics>
          <damping>0.004</damping>
        </dynamics>
        <use_parent_model_frame>1</use_parent_model_frame>
      </axis>
      <physics>
        <ode>
          <implicit_spring_damper>1</implicit_spring_damper>
        </ode>
      </physics>
    </joint>
    <link name="tricopter/rotor_5">
      <pose>0.2 0.3464101615136 -0.049 0 -0 0</pose>
      <inertial>
        <pose>0 0 0 0 -0 0</pose>
        <mass>0.04</mass>
        <inertia>
          <ixx>9.75e-06</ixx>
          <ixy>0</ixy>
          <ixz>0</ixz>
          <iyy>0.000166704</iyy>
          <iyz>0</iyz>
          <izz>0.000167604</izz>
        </inertia>
      </inertial>
      <collision name="tricopter/rotor_3_collision">
        <pose>0 0 0 0 -0 0</pose>
        <geometry>
          <cylinder>
            <length>0.005</length>
            <radius>0.175</radius>
          </cylinder>
        </geometry>
        <surface>
          <contact>
            <ode/>
          </contact>
          <friction>
            <ode/>
          </friction>
        </surface>
      </collision>
      <visual name="tricopter/rotor_3_visual">
        <pose>0 0 0 0 -0 0</pose>
        <geometry>
          <mesh>
            <scale>0.175 0.175 0.175</scale>
            <uri>/home/ahmad/catkin_ws/src/ardu_urdf_sandbox/meshes/propeller_cw.dae</uri>
          </mesh>
        </geometry>
        <material>
          <script>
            <name>Gazebo/Blue</name>
            <uri>file://media/materials/scripts/gazebo.material</uri>
          </script>
        </material>
      </visual>
    </link>
    <plugin filename="libLiftDragPlugin.so" name="rotor_5_blade_1">
      <a0>0.3</a0>
      <alpha_stall>1.4</alpha_stall>
      <cla>4.25</cla>
      <cda>0.1</cda>
      <cma>0.00</cma>
      <cla_stall>-0.025</cla_stall>
      <cda_stall>0.0</cda_stall>
      <cma_stall>0.0</cma_stall>
      <area>0.002</area>
      <air_density>1.2041</air_density>
      <cp>0.084 0 0</cp>
      <forward>0 -1 0</forward>
      <upward>0 0 1</upward>
      <link_name>tricopter::tricopter/rotor_5</link_name>
    </plugin>
    <plugin filename="libLiftDragPlugin.so" name="rotor_5_blade_2">
      <a0>0.3</a0>
      <alpha_stall>1.4</alpha_stall>
      <cla>4.25</cla>
      <cda>0.1</cda>
      <cma>0.00</cma>
      <cla_stall>-0.025</cla_stall>
      <cda_stall>0.0</cda_stall>
      <cma_stall>0.0</cma_stall>
      <area>0.002</area>
      <air_density>1.2041</air_density>
      <cp>-0.084 0 0</cp>
      <forward>0 1 0</forward>
      <upward>0 0 1</upward>
      <link_name>tricopter::tricopter/rotor_5</link_name>
    </plugin>
  </gazebo>
  <!--
	<xacro:include filename="$(find ardu_urdf_sandbox)/urdf/m100_pccase.xacro" />
  <xacro:pccase_macro
		namespace="${namespace}"
		parent_link="${namespace}/base_link">
		<origin xyz="0.0 0.0 0.04" rpy="0.0 0.0 0.0" />
  </xacro:pccase_macro>
-->
</robot>
